---
# file: roles/raspberry/Tasks/other.yml

- name: Install networking requirements
  apt: pkg={{ item.name }} state=present update_cache=yes
  with_items:
    - { name: 'isc-dhcp-server'}
    - { name: 'hostapd'}
    - { name: 'bridge-utils'}
    - { name: 'wiringpi'}
    - { name: 'screen'}
    - { name: 'minicom'}
  tags: networking-install

- name: copy interface conf
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - { src: 'etc/network/interfaces',         dest: '/etc/network/interfaces',         state: 'present'}
    - { src: 'etc/network/interfaces.d/eth0',  dest: '/etc/network/interfaces.d/eth0',  state: 'present'}
    - { src: 'etc/network/interfaces.d/br0',  dest: '/etc/network/interfaces.d/br0',  state: 'present'}
    - { src: 'etc/network/interfaces.d/wlan0', dest: '/etc/network/interfaces.d/wlan0', state: 'present'}
    - { src: 'etc/network/interfaces.d/wlan1', dest: '/etc/network/interfaces.d/wlan1', state: 'present'}
    - { src: 'etc/wpa_supplicant/wpa_supplicant.conf', dest: '/etc/wpa_supplicant/wpa_supplicant.conf', state: 'present'}
  tags:
    - networking-config
    - interfaces

- name: restart eth0 and bridge
  shell: "ifdown eth0 && ifup eth0 && ifdown br0 && ifup br0"
  tags:
    - networking-eth-restart
# - name: restart interface wlan1
#   #service: name=networking state=restarted args=wlan1
#   shell: "ifdown wlan1 && ifup wlan1"
#   tags: router

#- name: restart interface wlan0
  #service: name=networking state=restarted args=wlan1
#  shell: "ifdown wlan0 && ifup wlan0"
#  tags: router

# - name: restart interface wlan0
#   shell: "ifdown wlan0 && ifup wlan0"
#   tags:
#     - router
#     - interface

#- name: restart interface eth0
#  #service: name=networking state=restarted args=wlan1
#  shell: "ifdown eth0 && ifup eth0"
#  tags: router

- name: copy DHCP conf
  copy: src=etc/dhcp/dhcpd.conf dest=/etc/dhcp/dhcpd.conf
  tags: router

- name: copy isc-dhcp-server conf
  copy: src=etc/default/isc-dhcp-server dest=/etc/default/isc-dhcp-server
  tags: router

- name: restart isc-dhcp-server
  service: name=isc-dhcp-server state=restarted
  tags: router

- name: set nat
  shell: "{{ item.name }}"
  with_items:
   - { name: 'sysctl -w net.ipv4.ip_forward=1' }
   - { name: 'iptables -t nat -A POSTROUTING -o wlan1 -j MASQUERADE' }
   - { name: 'iptables -A FORWARD -i wlan0 -o wlan1 -m state --state RELATED,ESTABLISHED -j ACCEPT' }
   - { name: 'iptables -A FORWARD -i wlan1 -o wlan0 -j ACCEPT' }
   - { name: 'iptables-save' }
   - { name: 'iptables-save > /etc/firewall.conf' }
   - { name: 'echo "iptables-restore < /etc/iptables.ipv4.nat" > /lib/dhcpcd/dhcpcd-hooks/70-ipv4-nat' }
  tags:
   - router
   - iptables
   - vpn-config

- name: copy hostapd conf
  copy: src=etc/hostapd/hostapd.conf dest=/etc/hostapd/hostapd.conf
  tags: router

- name: restart hostapd
  service: name=hostapd state=stopped
  tags: router

#- name: stop hostapd
#  shell: service hostapd force-reload
#  tags: router

- name: start hostapd
  service: name=hostapd state=started
  tags: router

- name: start pptpd
  service: name=pptpd state=restarted
  tags:
    - router
    - vpn-config

- name: download clusterhat
  copy:
    src: usr/local/bin/clusterhat
    dest: /usr/local/bin/clusterhat
    mode: 755
